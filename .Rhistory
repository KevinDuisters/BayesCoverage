for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
source('~/Google Drive/1. Confidence/2018/Manuscript/Git/functions/coverage.R')
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
source('~/Google Drive/1. Confidence/2018/Manuscript/Git/functions/coverage.R')
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
source('~/Google Drive/1. Confidence/2018/Manuscript/Git/functions/coverage.R')
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
if(lambda==0.75 & w=1){segments(x0=3.7,x1=3.7,y0=0.95,y1=0.958)}# manual tweak to make top-left plot look nicer, be careful generalizing this
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
if(lambda==0.75 & w==1){segments(x0=3.7,x1=3.7,y0=0.95,y1=0.958)}# manual tweak to make top-left plot look nicer, be careful generalizing this
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
if(lambda==0.75 & w==1){segments(x0=3.7,x1=3.7,y0=0.95,y1=0.958,col="grey90",lwd=1.5)}# manual tweak to make top-left plot look nicer, be careful generalizing this
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
if(lambda==0.75 & w==1){segments(x0=3.5,x1=3.5,y0=0.95,y1=0.955,col="grey90",lwd=1.5)}# manual tweak to make top-left plot look nicer, be careful generalizing this
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
if(lambda==0.75 & w==1){segments(x0=3.4,x1=3.4,y0=0.951,y1=0.955,col="grey90",lwd=1.5)}# manual tweak to make top-left plot look nicer, be careful generalizing this
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
if(lambda==0.75 & w==1){segments(x0=3.42,x1=3.42,y0=0.951,y1=0.956,col="grey90",lwd=1.5)}# manual tweak to make top-left plot look nicer, be careful generalizing this
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
source('~/Google Drive/1. Confidence/2018/Manuscript/Git/functions/coverage.R')
#--------------------------------------------------------------------------------------------------------------------#
# On frequentist coverage of Bayesian credible sets for estimation of the mean under constraints
# Duisters & Schmidt-Hieber
# Math Institute, Leiden University
# Oct 2018
#--------------------------------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------------------------------#
# get U function
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
#w=0.2 # Supplemental
if(w==1){pdf("Figures/figcov.pdf",width=9)}else{pdf("Figures/SFcov.pdf",width=9)}
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
# bottom
if(w==1){pdf("Figures/figcovbottom.pdf",width=9)}else{pdf("Figures/SFcovbottom.pdf",width=9)}
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,7.5)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
dev.off()
alpha <- 0.05
a <- -ln(alpha)
a <- -log(alpha)
U <- function(x,alpha){
d0 <- qlaplace(1/(1+alpha))
if(x < d0){x - qlaplace(alpha*plaplace(x))}else{x + qlaplace(1/2 + ((1-alpha)/2)*plaplace(x))}
}
xseq <- c(-3,10,0.01)
plot(xseq,sapply(xseq,function(x)U(x,alpha)))
xseq <- seq(-3,10,0.01)
plot(xseq,sapply(xseq,function(x)U(x,alpha)))
xseq <- seq(-2,5,0.01)
plot(xseq,sapply(xseq,function(x)U(x,alpha)))
xseq <- seq(-2,5,0.01)
plot(xseq,sapply(xseq,function(x)U(x,alpha)))
plot(xseq,sapply(xseq,function(x)U(x,alpha)),ylim=c(0,5))
plot(xseq,sapply(xseq,function(x)U(x,alpha)),ylim=c(0,10))
plot(xseq,sapply(xseq,function(x)U(x,alpha)),ylim=c(0,10),xlab="x",ylab="theta")
plot(xseq,sapply(xseq,function(x)U(x,alpha)),ylim=c(0,10),xlab="x",ylab="U(x")
plot(xseq,sapply(xseq,function(x)U(x,alpha)),ylim=c(0,10),xlab="x",ylab="U(x)")
abline(lty=-log(alpha),lty=3)
abline(v=-log(alpha),lty=3)
# Lower bounded mean Laplace reproduction
alpha <- 0.05
a <- -log(alpha)
U <- function(x,alpha){
d0 <- qlaplace(1/(1+alpha))
if(x < d0){x - qlaplace(alpha*plaplace(x))}else{x + qlaplace(1/2 + ((1-alpha)/2)*plaplace(x))}
}
xseq <- seq(-2,5,0.01)
plot(xseq,sapply(xseq,function(x)U(x,alpha)),ylim=c(0,10),xlab="x",ylab="U(x)")
abline(h=-log(alpha),lty=3)
abline(v=qlaplace(1/(1+alpha)),lty=3)
abline(v=qlaplace(1-alpha/2),lty=3,col="blue") # d1
abline(v=-qlaplace(1-alpha/2),lty=3,col="blue") # d1
# Lower bounded mean Laplace reproduction
alpha <- 0.05
a <- -log(alpha)
U <- function(x,alpha){
d0 <- qlaplace(1/(1+alpha))
if(x < d0){x - qlaplace(alpha*plaplace(x))}else{x + qlaplace(1/2 + ((1-alpha)/2)*plaplace(x))}
}
xseq <- seq(-2,5,0.01)
plot(xseq,sapply(xseq,function(x)U(x,alpha)),ylim=c(0,10),xlab="x",ylab="U(x)")
abline(h=-log(alpha),lty=3)
abline(v=qlaplace(1/(1+alpha)),lty=3) #d0
abline(v=-qlaplace(1-alpha/2),lty=3,col="blue") # d1
abline(v=qlaplace(alpha/2),lty=3,col="blue") # d1
abline(v=qlaplace(alpha/2),lty=3,col="blue") # d1
abline(v=qlaplace(1-alpha/2),lty=3,col="blue") # d1
# Inverse
thetaseq <- seq(0.01,8,0.01)
Ugrid <- sapply(xseq,function(x)U(x,alpha))
plot(xseq,Ugrid,ylim=c(0,10),xlab="x",ylab="U(x)")
abline(h=-log(alpha),lty=3)
abline(v=qlaplace(1/(1+alpha)),lty=3) #d0
# sup
sup.xU <- sapply(thetaseq,function(t) xgrid[max(which(Ugrid)==t)])
# sup
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid)==t)])
# sup
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid==t)])
# sup
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid==t))])
sup.xU
# sup
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid<t))])
# sup
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid>t))])
# sup
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid<t))])
plot(thetaseq,sup.xU)
# sup, inf
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid<=t))])
inf.xU <- sapply(thetaseq,function(t) xseq[min(which(Ugrid>=t))])
plot(thetaseq,sup.xU)
plot(thetaseq,inf.xU)
lines(thetaseq,sup.xU)
lines(thetaseq,sup.xU,col="red")
plot(thetaseq,inf.xU,ylab="Inverse")
lines(thetaseq,sup.xU,col="red")
plot(thetaseq,inf.xU,ylab="Inverse",xlab="theta")
lines(thetaseq,sup.xU,col="red")
xseq <- seq(-3,5,0.01)
Ugrid <- sapply(xseq,function(x)U(x,alpha))
plot(xseq,Ugrid,ylim=c(0,10),xlab="x",ylab="U(x)")
abline(h=-log(alpha),lty=3)
abline(v=qlaplace(1/(1+alpha)),lty=3) #d0
# Inverse
thetaseq <- seq(0.01,8,0.01)
# sup, inf
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid<=t))])
inf.xU <- sapply(thetaseq,function(t) xseq[min(which(Ugrid>=t))])
plot(thetaseq,inf.xU,ylab="Inverse",xlab="theta")
lines(thetaseq,sup.xU,col="red")
# Lower bounded mean Laplace reproduction
alpha <- 0.05
a <- -log(alpha)
U <- function(x,alpha){
d0 <- qlaplace(1/(1+alpha))
if(x < d0){x - qlaplace(alpha*plaplace(x))}else{x + qlaplace(1/2 + ((1-alpha)/2)*plaplace(x))}
}
xseq <- seq(-2,5,0.01)
Ugrid <- sapply(xseq,function(x)U(x,alpha))
plot(xseq,Ugrid,ylim=c(0,10),xlab="x",ylab="U(x)")
abline(h=-log(alpha),lty=3)
abline(v=qlaplace(1/(1+alpha)),lty=3) #d0
# Inverse
thetaseq <- seq(0.01,8,0.01)
# sup, inf
sup.xU <- sapply(thetaseq,function(t) xseq[max(which(Ugrid<=t))])
inf.xU <- sapply(thetaseq,function(t) xseq[min(which(Ugrid>=t))])
plot(thetaseq,inf.xU,ylab="Inverse",xlab="theta")
lines(thetaseq,sup.xU,col="red")
0.95/1.05
par(mfcol=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,75)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="Normal",plot.cov=T,cols=c("black","red","blue","orange","green"))
coverage(thetaseq,alpha,lambda,w,dist="Lap",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
library(rmutil) #dlaplace
source("functions/getU.R")
source("functions/coverage.R")
#--------------------------------------------------------------------------------------------------------------------#
# Plot Coverage
alpha <- 0.05
w <- 1
par(mfrow=c(2,2),xpd=F,mar=c(4,4,2,2))
lambdas <- c(0.75,75)
for(lambda in lambdas){
thetaseq <- seq(lambda+0.005,lambda+10,0.005)
coverage(thetaseq,alpha,lambda,w,dist="t3",plot.cov=T,cols=c("black","red","blue","orange","green"))
#coverage(thetaseq,alpha,lambda,w,dist="Cauchy",plot.cov=T,cols=c("black","red","blue","orange","green"))
}
